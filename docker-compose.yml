version: '3.8'

networks: 
  laravel:
    name: laravel

services: 
  nginx:
    build:
      context: .
      dockerfile: nginx.dockerfile
    container_name: nginx
    depends_on: 
      - php
      - postgres
    ports: 
      - 80:80
      - 443:443
    volumes: 
      - ./src:/var/www/html
      - ./nginx/errors:/etc/nginx/errors:delegated
    networks: 
      - laravel

  php:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: php
    volumes: 
      - ./src:/var/www/html
    networks: 
      - laravel

  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - 5432:5432
    volumes:
        - ./postgres/:/var/lib/postgresql
    environment: 
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_DB: ${POSTGRES_DB}
    networks: 
      - laravel
  
  composer:
    build:
      context: .
      dockerfile: composer.dockerfile
    container_name: composer
    volumes: 
      - ./src:/var/www/html
    working_dir: /var/www/html
    networks: 
      - laravel
  
  artisan:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: artisan
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ["php", "artisan"]
    networks: 
      - laravel

  phpunit:
    build: 
      context: .
      dockerfile: php.dockerfile
    container_name: phpunit
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ["var/www/html/vendor/bin/phpunit"]
    networks:
      - laravel

  npm:
    image: node:14.17.3-alpine
    container_name: npm
    volumes: 
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']
    networks: 
      - laravel
